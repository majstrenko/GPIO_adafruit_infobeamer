#!/usr/bin/python2.7
from hosted import device, node, config, time
config.restart_on_update()

device.gpio.monitor(config.pin_26)
for pin, state in device.gpio.poll_forever():
    node.send('/state:%d' % state)
    if state == 1:
        print("pin touched")
        device.gpio.setup_pin(21, direction="out")
        time.sleep(20)
        device.gpio.set_pin_value(21,  high=True)

device.gpio.monitor(config.pin_19)
for pin, state in device.gpio.poll_forever():
    node.send('/state:%d' % state)
    if state == 1:
        print("pin touched")
        device.gpio.setup_pin(21, direction="out")
        time.sleep(20)
        device.gpio.set_pin_value(21,  high=True)

device.gpio.monitor(config.pin_13)
for pin, state in device.gpio.poll_forever():
    node.send('/state:%d' % state)
    if state == 1:
        print("pin touched")
        device.gpio.setup_pin(21, direction="out")
        time.sleep(20)
        device.gpio.set_pin_value(21,  high=True)

device.gpio.monitor(config.pin_6)
for pin, state in device.gpio.poll_forever():
    node.send('/state:%d' % state)
    if state == 1:
        print("pin touched")
        device.gpio.setup_pin(21, direction="out")
        time.sleep(20)
        device.gpio.set_pin_value(21,  high=True)
